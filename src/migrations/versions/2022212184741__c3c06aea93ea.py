"""empty message

Revision ID: c3c06aea93ea
Revises: 
Create Date: 2022-02-12 18:47:41.559638

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c3c06aea93ea"
down_revision = None

depends_on = None
branch_labels = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("tg_id", sa.BigInteger(), nullable=False),
        sa.Column("first_name", sa.Text(), nullable=False),
        sa.Column("last_name", sa.Text(), nullable=True),
        sa.Column("username", sa.Text(), nullable=True),
        sa.Column(
            "is_bot",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tg_id", name="xxx_user_unique_tg_id"),
    )
    op.create_table(
        "books",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_books_user_id"), "books", ["user_id"], unique=False
    )
    op.create_table(
        "raw",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("book_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("message_id", sa.BigInteger(), nullable=False),
        sa.Column("photo_file_id", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["book_id"], ["books.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id", "message_id", name="xxx_raw_unique_uid_mid"
        ),
    )
    op.create_index(op.f("ix_raw_book_id"), "raw", ["book_id"], unique=False)
    op.create_index(
        op.f("ix_raw_message_id"), "raw", ["message_id"], unique=False
    )
    op.create_index(op.f("ix_raw_user_id"), "raw", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_raw_user_id"), table_name="raw")
    op.drop_index(op.f("ix_raw_message_id"), table_name="raw")
    op.drop_index(op.f("ix_raw_book_id"), table_name="raw")
    op.drop_table("raw")
    op.drop_index(op.f("ix_books_user_id"), table_name="books")
    op.drop_table("books")
    op.drop_table("users")
    # ### end Alembic commands ###
